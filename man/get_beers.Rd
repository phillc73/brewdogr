% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_beers.R
\name{get_beers}
\alias{get_beers}
\title{Get Beers Function is All You Need}
\usage{
get_beers(
  one_beer = NULL,
  abv_gt = NULL,
  abv_lt = NULL,
  ibu_gt = NULL,
  ibu_lt = NULL,
  ebc_gt = NULL,
  ebc_lt = NULL,
  beer_name = NULL,
  yeast = NULL,
  brewed_before = NULL,
  brewed_after = NULL,
  hops = NULL,
  malt = NULL,
  food = NULL,
  ids = NULL,
  per_page = 80
)
}
\arguments{
\item{one_beer}{Integer. Returns a single beer from the api using the beers id. Use this only without any other parameters present.}

\item{abv_gt}{Integer. Returns all beers with ABV greater than the supplied number}

\item{abv_lt}{Integer. Returns all beers with ABV less than the supplied number}

\item{ibu_gt}{Integer. Returns all beers with IBU greater than the supplied number}

\item{ibu_lt}{Integer. Returns all beers with IBU less than the supplied number}

\item{ebc_gt}{Integer. Returns all beers with EBC greater than the supplied number}

\item{ebc_lt}{Integer. Returns all beers with EBC less than the supplied number}

\item{beer_name}{String. Returns all beers matching the supplied name (this will match partial strings as well so e.g punk will return Punk IPA), if you need to add spaces just add an underscore (_).}

\item{yeast}{String. Returns all beers matching the supplied yeast name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).}

\item{brewed_before}{String. Returns all beers brewed before this date, the date format is mm/yyyy e.g 10/2011}

\item{brewed_after}{String. Returns all beers brewed after this date, the date format is mm/yyyy e.g 10/2011}

\item{hops}{String. Returns all beers matching the supplied hops name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).}

\item{malt}{String. Returns all beers matching the supplied malt name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).}

\item{food}{String. Returns all beers matching the supplied food string, this performs a fuzzy match, if you need to add spaces just add an underscore (_).}

\item{ids}{String. Returns all beers matching the supplied ID's. You can pass in multiple ID's by separating them with a | symbol.}

\item{per_page}{Integer. Number of recipes to return from the query. Defaults to the maximum of 80.}
}
\value{
Beer recipes to brew your own. Returns a dataframe. With some nested lists.
}
\description{
\url{https://punkapi.com/documentation/v2}
}
\details{
\code{get_beers} Wrapper function to return data from the Punk API. This is a collection of beer brewing recipes from the brewer Brewdog. It is regularly published in a less programmatically queriable form as the DIY Dog
}
\examples{

get_beers(12)

get_beers(abv_gt = 8)

get_beers(abv_gt = 8,
          yeast = "Wyeast",
          brewed_after = "09/2013",
          hops = "Fuggle")

}
